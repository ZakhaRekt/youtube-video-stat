import User from './models/users.js';
import { youtube as _youtube } from '@googleapis/youtube';
import {
    Markup
} from 'telegraf';
const englishMenu = Markup.keyboard([
    ['üîé Check videos', 'üí® Follow videos'],
    ['‚úÖ Profile'],
    ['Change language => üá∫üá¶']
]).resize()

const ukrainianMenu = Markup.keyboard([
    ['üîé –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤—ñ–¥–µ–æ', 'üí® –°–ª—ñ–¥–∫—É–≤–∞—Ç–∏ –∑–∞ –≤—ñ–¥–µ–æ'],
    ['‚úÖ –ü—Ä–æ—Ñ—ñ–ª—å'],
    ['–ó–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É => üá¨üáß']
]).resize()
export default function checkFollowingUserVideos(ctx) {
    User.findOne({ID: ctx.from.id}, (err, user) => {
        if(err) console.log(err)
        if(user.language == "en") {
            if(user.followingVideos == 0) {
                ctx.reply("You don't follow any videos")
            } else {
                const validVideos = [];
                Promise.all(
                    user.followingVideos.map(async vid => {
                        const youtube = _youtube({
                            version: 'v3',
                            auth: process.env.YOUTUBE_API_KEY
                        });
                        await youtube.videos.list({
                            part: ['snippet', 'statistics'],
                            id: vid
                        }).then((response) => {
                            if(response.data.items.length == 0) {
                               return ctx.reply(`Video: https://www.youtube.com/watch?v=${vid} not found`)
                            }
                            const video = response.data.items[0]
                            const title = video.snippet.title
                            const channel = video.snippet.channelTitle
                            const views = video.statistics.viewCount
                            const likes = video.statistics.likeCount
                            const comments = video.statistics.commentCount
                            const videoUrl = `https://www.youtube.com/watch?v=${video.id}`
                            ctx.replyWithHTML(`<b>${title}</b>
<b>Channel:</b> ${channel}
<b>Video URL:</b> ${videoUrl}\n
<b>Views:</b> ${views}
<b>Likes:</b> ${likes}
<b>Comments:</b> ${comments}`)
                            validVideos.push(vid)
                        })
                    }),
                    (function after() {
                        console.log(validVideos)
                        user.checkCuldown = Date.now() + 600000;
                        user.save()
                        ctx.reply('Check ends.... You can check your following videos again in 10 minute', englishMenu)
                    })()
                )
                console.log(validVideos)
            }
        } else {
            if(user.followingVideos == 0) {
                ctx.reply("–í—ã –Ω–µ —Å–ª—ñ–¥–∫—É—î—Ç–µ –∑–∞ –≤—ñ–¥–µ–æ")
            } else {
                const validVideos = [];
                Promise.all(
                    user.followingVideos.map(async vid => {
                        const youtube = _youtube({
                            version: 'v3',
                            auth: process.env.YOUTUBE_API_KEY
                        });
                        await youtube.videos.list({
                            part: ['snippet', 'statistics'],
                            id: vid
                        }).then((response) => {
                            if(response.data.items.length == 0) {
                                return ctx.reply(`–í—ñ–¥–µ–æ: https://www.youtube.com/watch?v=${vid} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`)
                            }
                            const video = response.data.items[0]
                            const title = video.snippet.title
                            const channel = video.snippet.channelTitle
                            const views = video.statistics.viewCount
                            const likes = video.statistics.likeCount
                            const comments = video.statistics.commentCount
                            const videoUrl = `https://www.youtube.com/watch?v=${video.id}`
                            ctx.replyWithHTML(`<b>${title}</b>
<b>–ö–∞–Ω–∞–ª:</b> ${channel}
<b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –≤—ñ–¥–µ–æ:</b> ${videoUrl}\n
<b>–ü–µ—Ä–µ–≥–ª—è–¥—ñ–≤:</b> ${views}
<b>–õ–∞–π–∫—ñ–≤:</b> ${likes}
<b>–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤:</b> ${comments}`)
                            validVideos.push(vid)
                        })
                    }),
                    (function after() {
                        user.checkCuldown = Date.now() + 600000;
                        user.save()
                        ctx.reply('–ü–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –≤—ñ–¥–µ–æ —â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ 10 —Ö–≤–∏–ª–∏–Ω! ', ukrainianMenu)
                    })()
                )
            }
        }
    })
}